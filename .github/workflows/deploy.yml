name: 🚀 Deploy Multi-Project via pnpm to Aliyun

on:
    push:
        branches:
            - main
        paths:
            - "程序实现文档/frontend/h5-app/**"
            - "程序实现文档/frontend/health-manage/**"
            - "程序实现文档/backend/**"
            - ".github/workflows/deploy.yml"
    workflow_dispatch: # 手动触发

jobs:
    # ============ H5 前端 ============
    deploy-h5:
        name: 🌐 Deploy H5 Frontend
        runs-on: ubuntu-latest
        if: contains(github.event.head_commit.message, '[all]') || contains(join(github.event.commits.*.modified, ','), '程序实现文档/frontend/h5-app/')
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.18.1
                  cache: "pnpm"

            - name: Install pnpm
              run: |
                  corepack enable
                  corepack prepare pnpm@10.18.1 --activate
                  pnpm -v

            - name: Install & Build H5
              working-directory: 程序实现文档/frontend/h5-app
              run: |
                  pnpm install --frozen-lockfile
                  pnpm run build

            - name: Clean old H5 files
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      rm -rf /opt/1panel/www/sites/frontend/index/*

            - name: Upload new H5 build
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  source: "程序实现文档/frontend/h5-app/dist/*"
                  target: "/opt/1panel/www/sites/frontend/index"

            - name: Reload Nginx (optional)
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      systemctl reload nginx || true

    # ============ 后台管理 ============
    deploy-admin:
        name: 🧭 Deploy Admin Panel
        runs-on: ubuntu-latest
        if: contains(github.event.head_commit.message, '[all]') || contains(join(github.event.commits.*.modified, ','), '程序实现文档/frontend/health-manage/')
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.18.1
                  cache: "pnpm"

            - name: Install pnpm
              run: |
                  corepack enable
                  corepack prepare pnpm@10.18.1 --activate
                  pnpm -v

            - name: Install & Build Admin
              working-directory: 程序实现文档/frontend/health-manage
              run: |
                  pnpm install --frozen-lockfile
                  pnpm run build

            - name: Clean old Admin files
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      rm -rf /opt/1panel/www/sites/frontend-admin/index/*

            - name: Upload new Admin build
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  source: "程序实现文档/frontend/health-manage/dist/*"
                  target: "/opt/1panel/www/sites/frontend-admin/index"

            - name: Reload Nginx (optional)
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      systemctl reload nginx || true

    # ============ 服务端 ============
    deploy-server:
        name: ⚙️ Deploy Server
        runs-on: ubuntu-latest
        if: contains(github.event.head_commit.message, '[all]') || contains(join(github.event.commits.*.modified, ','), '程序实现文档/backend/')
        steps:
            - uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20.18.1
                  cache: "pnpm"

            - name: Install pnpm
              run: |
                  corepack enable
                  corepack prepare pnpm@10.18.1 --activate
                  pnpm -v

            - name: Install & Build Server
              working-directory: 程序实现文档/backend
              run: |
                  pnpm install --frozen-lockfile
                  pnpm run build

            - name: Clean old Server files
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      rm -rf /opt/1panel/www/sites/healthbackend/index/*

            - name: Upload new Server build
              uses: appleboy/scp-action@v0.1.7
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  source: "程序实现文档/backend/dist/*"
                  target: "/opt/1panel/www/sites/healthbackend/index"

            - name: Restart Server (PM2)
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.SSH_HOST }}
                  username: ${{ secrets.SSH_USER }}
                  key: ${{ secrets.SSH_KEY }}
                  script: |
                      cd /opt/1panel/www/sites/healthbackend/index
                      pm2 reload all || pm2 restart all || true
