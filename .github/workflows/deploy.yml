name: 🚀 Deploy Multi-Project via npm to Aliyun

on:
  push:
    branches:
      - main
    paths:
      - "程序实现文档/frontend/h5-app/**"
      - "程序实现文档/frontend/health-manage/**"
      - "程序实现文档/backend/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch: # 手动触发部署

defaults:
  run:
    shell: bash

jobs:
  # 检测变更目录
  detect-changes:
    name: 🔍 Detect Changed Projects
    runs-on: ubuntu-latest
    outputs:
      h5: ${{ steps.filter.outputs.h5 }}
      admin: ${{ steps.filter.outputs.admin }}
      server: ${{ steps.filter.outputs.server }}
    steps:
      - uses: actions/checkout@v4
      - name: Detect path changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            h5:
              - '程序实现文档/frontend/h5-app/**'
            admin:
              - '程序实现文档/frontend/health-manage/**'
            server:
              - '程序实现文档/backend/**'

  # ============ H5 前端 ============
  deploy-h5:
    name: 🌐 Deploy H5 Frontend
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.h5 == 'true' || contains(github.event.head_commit.message, '[all]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Move into repository root
        run: |
          cd $GITHUB_WORKSPACE
          echo "Current dir: $(pwd)"
          ls -la

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1

      - name: Install & Build H5
        run: |
          cd "$GITHUB_WORKSPACE/程序实现文档/frontend/h5-app"
          echo "Building in $(pwd)"
          npm install --no-audit --no-fund
          npm run build

      - name: Clean old H5 files
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            rm -rf /opt/1panel/www/sites/frontend/index/*

      - name: Upload new H5 build
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "程序实现文档/frontend/h5-app/dist/*"
          target: "/opt/1panel/www/sites/frontend/index"

      - name: Reload Nginx (optional)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            systemctl reload nginx || true

  # ============ 后台管理 ============
  deploy-admin:
    name: 🧭 Deploy Admin Panel
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.admin == 'true' || contains(github.event.head_commit.message, '[all]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Move into repository root
        run: |
          cd $GITHUB_WORKSPACE
          echo "Current dir: $(pwd)"
          ls -la

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1

      - name: Install & Build Admin
        run: |
          cd "$GITHUB_WORKSPACE/程序实现文档/frontend/health-manage"
          echo "Building in $(pwd)"
          npm install --no-audit --no-fund
          npm run build

      - name: Clean old Admin files
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            rm -rf /opt/1panel/www/sites/frontend-admin/index/*

      - name: Upload new Admin build
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "程序实现文档/frontend/health-manage/dist/*"
          target: "/opt/1panel/www/sites/frontend-admin/index"

      - name: Reload Nginx (optional)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            systemctl reload nginx || true

  # ============ 服务端 ============
  deploy-server:
    name: ⚙️ Deploy Server
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.server == 'true' || contains(github.event.head_commit.message, '[all]') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Move into repository root
        run: |
          cd $GITHUB_WORKSPACE
          echo "Current dir: $(pwd)"
          ls -la

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.18.1

      - name: Install & Build Server (Auto Detect Path)
        run: |
          echo "🔍 Searching for backend path..."
          BACKEND_PATH=$(find $GITHUB_WORKSPACE -type d -path "*/backend" -exec test -f "{}/package.json" \; -print | head -n 1)
          if [ -z "$BACKEND_PATH" ]; then
            echo "❌ Cannot find backend/package.json. Directory structure:"
            find $GITHUB_WORKSPACE -maxdepth 3 -type d
            exit 1
          fi
          echo "✅ Found backend path: $BACKEND_PATH"
          cd "$BACKEND_PATH"
          echo "📁 Now in $(pwd)"
          npm install --no-audit --no-fund
          npm run build

      - name: Clean old Server files
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            rm -rf /opt/1panel/www/sites/healthbackend/index/*

      - name: Upload new Server build
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          source: "程序实现文档/backend/dist/*"
          target: "/opt/1panel/www/sites/healthbackend/index"

      - name: Restart Server (PM2)
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /opt/1panel/www/sites/healthbackend/index
            pm2 reload all || pm2 restart all || true
