@use './variables.scss' as *;

// ========== 常用混入 ==========

// flex布局
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-start {
  display: flex;
  align-items: center;
  justify-content: flex-start;
}

@mixin flex-end {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

// 文本省略
@mixin ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: $lines;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: block;
    clear: both;
  }
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 卡片样式
@mixin card($padding: $space-md, $radius: $radius-md) {
  background: $white;
  border-radius: $radius;
  padding: $padding;
  box-shadow: $shadow-md;
}

// 渐变背景
@mixin gradient-bg($start-color, $end-color, $direction: 135deg) {
  background: linear-gradient($direction, $start-color 0%, $end-color 100%);
}

// 按钮样式
@mixin button-primary {
  height: $button-height;
  border-radius: $button-radius;
  background-color: $primary-color;
  color: $white;
  font-size: $button-font-size;
  border: none;
  cursor: pointer;
  transition: all $duration-base $ease-in-out;

  &:active {
    opacity: 0.8;
  }
}

@mixin button-secondary {
  height: $button-height;
  border-radius: $button-radius;
  background-color: transparent;
  color: $primary-color;
  font-size: $button-font-size;
  border: 1px solid $primary-color;
  cursor: pointer;
  transition: all $duration-base $ease-in-out;

  &:active {
    background-color: rgba($primary-color, 0.1);
  }
}

// 固定定位
@mixin fixed-top {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: $z-index-fixed;
}

@mixin fixed-bottom {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  z-index: $z-index-fixed;
}

// 安全区域适配
@mixin safe-area-bottom($property: padding-bottom, $value: 0) {
  #{$property}: $value;
  #{$property}: calc(#{$value} + env(safe-area-inset-bottom));
}

@mixin safe-area-top($property: padding-top, $value: 0) {
  #{$property}: $value;
  #{$property}: calc(#{$value} + env(safe-area-inset-top));
}

// 响应式断点
@mixin mobile {
  @media (max-width: 768px) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: 1025px) {
    @content;
  }
}

@mixin pc {
  @media (min-width: 769px) {
    @content;
  }
}

// 滚动条样式
@mixin scrollbar($width: 6px, $track-color: transparent, $thumb-color: rgba(0, 0, 0, 0.2)) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $width / 2;
  }
}

// 毛玻璃效果
@mixin frosted-glass($blur: 10px, $opacity: 0.8) {
  backdrop-filter: blur($blur);
  background-color: rgba(255, 255, 255, $opacity);
}

// 图片占位
@mixin img-placeholder($width: 100%, $height: 100%, $bg-color: $background-color) {
  width: $width;
  height: $height;
  background-color: $bg-color;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

// 骨架屏动画
@mixin skeleton-loading {
  background: linear-gradient(90deg, $background-color 25%, #e0e0e0 50%, $background-color 75%);
  background-size: 200% 100%;
  animation: skeleton-loading 1.5s ease-in-out infinite;
}

@keyframes skeleton-loading {
  0% {
    background-position: 200% 0;
  }
  100% {
    background-position: -200% 0;
  }
}

// 点击波纹效果
@mixin ripple-effect($color: rgba(0, 0, 0, 0.1)) {
  position: relative;
  overflow: hidden;

  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: $color;
    transform: translate(-50%, -50%);
    transition: width $duration-base $ease-out, height $duration-base $ease-out;
  }

  &:active::after {
    width: 200%;
    height: 200%;
  }
}
